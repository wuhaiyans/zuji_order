<?php
/*
 *
 * 数据配置类
 *
 * @author heavenwu
 *
 * @email wutiantang@huishoubao.com
 *
 * @date 2018-4-27
 *
 */
namespace App\Order\Modules;
class PublicInc
{
    private static $orderArr = array(
        'payType'=>array(
        	//PC
            '1' => '支付宝',
            '2' => '银联在线',
            '3' => '微信二维码支付',
        	//Wap
            '11' => '支付宝-移动',
            '12' => '银联-移动',
            '13' => '微信支付',
        	//App
        	'21' => '支付宝客户端',
        	'22' => '银联客户端',
        	'23' => '微信客户端',
        ),
    	'payEnName' => array(
    		//PC
    		'1' => 'alipay',
    		'2' => 'union',
    		'3'	=> 'weixinqr',
			//Wap
    		'11' => 'malipay',
    		'12' => 'munion',
    		'13' => 'weixin',
    		//App
    		'21' => 'alipaysdk',	
    		'22' => 'unionsdk',
    		'23' => 'weixinsdk',
    	),	
    		
    	'payInt' => array(
    		//PC
    		'alipay'	=> 1,
    		'union'		=> 2,
    		'weixinqr'	=> 3,
    		//Wap
    		'malipay'	=> 11,
    		'munion'	=> 12,
    		'weixin'	=> 13,
    		//App
    		'alipaysdk'	=> 21,
    		'unionsdk'	=> 22,
    		'weixinsdk'	=> 23,
    	),
    		
    	//实际支付成功的支付方式
    	'paySuccessInt' => array(
    		//PC
    		'alipay'	=> 1,
    		'unionpay'	=> 2,
    		'weixinqr'	=> 3,
    		//Wap
    		'malipay'	=> 11,
    		'munion'	=> 12,
    		'weixin'	=> 13,
    		//App
    		'alipaysdk'	=> 21,
    		'unionsdk'	=> 22,
    		'weixinsdk'	=> 23,
    	),
    	
    	//移动端需修改支付方式
    	'payTypeNeedModify' => array(
    		'inWechat'	=> array(1, 2, 3, 11, 21, 23),
    		'inBrowser'	=> array(2, 3, 13, 21),
    		'inApp'		=> array(1, 2, 3, 12, 13, 22)
    	),
            
         //发票信息
        'feeInfo' => array(
         	'0'	=> '不开发票',
         	'1'	=> '个人',
         	'2'	=> '单位'
         ),
    		
         //交易状态
        'payState'=>array(
        	'0' => '全部状态',
            '1' => '交易中的订单',
            '2' => '交易完毕的订单',
            '3' => '退款中的订单'
        ),
        //
        'payStateId'=>array(
            '1' => array('0','1','2','3','4','5'),
            '2' => array('10','11','12'),
            '3' => array('6')
        ),
         //上传头像默认操作,1 用户头像上传 ，2 意见反馈，3，投诉，4退货退款
          'upLoadLimited' => array(
                  '1' => array(
                          'width'  => 1500,
                          'height' => 1500,
                          'size'   => 5242880,
                          'limit'  => 5,
                          'mwidth' => 312,
                          'mheight'=> 312
                          ),
                  '2' => array(
                          'width'  => 1500,
                          'height' => 1500,
                          'size'   => 5242880,
                          'limit'  => 5
                  ),
                  '3' => array(
                          'width'  => 1500,
                          'height' => 1500,
                          'size'   => 5242880,
                          'limit'  => 5
                  ),
                  '4' => array(
                          'width'  => 1500,
                          'height' => 1500,
                          'size'   => 5242880,
                          'limit'  => 5
                     )
                  
                 ),
            
    	//用户可操作的记录
    	'payAct'=>array(
        	'1'=> array('0','4','12')	
        ),
    	//付款提示
    	'payHint'=>array(
    		'1'	=> '你还没有登陆',
    		'2'	=> '请提供交易SN',
    		'3'	=> '支付方式不存在',
    		'4'	=> '页面跳转',
    		'5'	=> '请提供交易金额',
    		'6'	=> '成功',
    	    '7' => '订单已过期'
    	),
    		
        'orderTime'=>array(
            '1' => '三个月内的订单',
            '2' => '三个月前的订单'
        ),
    		
    		//订单列表的可用操作
    		'actState'=>array(
    				1 => '付款',
    				2 => '确认收货',
    				3 => '评价',
    				4 => '查看物流',
    				5 => '修改支付方式',
    				6 => '再次购买',
    		),
    		//订单列表的售后
    		'serviceState'=>array(
    				1 => '投诉',
    				2 => '退款/退货',
    		),

        //订单状态
        'orderStatus'=>array(
            '0' => '待付款',
            '1' => '待发货',
            '2' => '配货中',
            '3' => '已发货',
            '4' => '等待买家收货',
            '5' => '已送达',
            '6' => '申请退款/退货中',
            '10' => '交易完成',
            '11' => '交易关闭',
            '12' => '交易成功',
        ),
        //open订单状态
        'openOrderStatus'=>array(
            '1' => '待发货',
            '2' => '配货中',
            '3' => '已发货',
            '5' => '已送达',
            '6' => '有退款/退货',
            '10' => '交易完成',
            '12' => '交易成功',
        ),
    	//订单状态
    	'orderProgress'=>array(
    				'0' => '待付款',
    				'1' => '待发货',
    				'2' => '配货中',
    				'3' => '已发货',
    				'4' => '等待买家收货',
    				'5' => '已送达',
    				'6' => '申请退款/退货中',
    				'10' => '交易完成',
    				'11' => '交易关闭',
    				'12' => '交易成功',
    	),
    	'orderProgressBack'=>array(
    				'0' => '待付款',
    				'1' => '退款中',//申请退款中',
    				'2' => '退款中',
    				'3' => '退款中',
    				'4' => '退款中',
    				'5' => '退款退货中',
    				'6' => '退款退货中',
    				'10' => '交易完成',
    				'11' => '交易关闭',
    				'12' => '交易成功',
    	),
        //订单状态
        'invoice'=>array(
            '1' => '办公用品',
            '2' => '服装配饰',
            '3' => '数码产品',
            '4' => '礼品'
        ),
    	//订单评价状态
    	'orderCommentState'=>array(
            '1' => '不可以评价',
            '2' => '未评价',
            '3' => '已评价',
            '4' => '已评价并有回复'
        ),
    	//订单商品评价状态
    	'orderGoodsCommentState'=>array(
            '1' => '不可以评价',
            '2' => '未评价',
            '3' => '已评价',
    	    '4' => '系统默认好评'
        ),
    	//信息设置数据
    	'settings' => array (
            0=>array (
                'name' => '交易',
                'describe' => '',
                'items' => array (
                    0=>array (
                        'name' => '付款提醒',
                        'describe' => '订单3小时内未付款会自动关闭，提前半小时提醒付款',
                        'default' => array (
                            'wms' => 3,
                            'mms' => 3,
                            'ems' => 3
                        )
                    ),
                    1=>array (
                        'name' => '工厂代表已发货',
                        'describe' => '',
                        'default' => array (
                            'wms' => 3,
                            'mms' => 1,
                            'ems' => 1
                        )
                    ),
                    2=>array (
                        'name' => '工厂代表评价回复',
                        'describe' => '',
                        'default' => array (
                            'wms' => 3,
                            'mms' => 0,
                            'ems' => 1
                        )
                    )
                )
            ),

            1=>array (
                'name' => '退款/退货',
                'describe' => '',
                'items' => array (
                    0=>array (
                        'name' => '退货/退款申请是否已通过',
                        'describe' => '',
                        'default' => array (
                            'wms' => 2,
                            'mms' => 3,
                            'ems' => 3
                        )
                    ),
                    2=>array (
                        'name' => '退货已收到',
                        'describe' => '',
                        'default' => array (
                            'wms' => 2,
                            'mms' => 1,
                            'ems' => 1
                        )
                    )
                )
            ),

            2=>array (
                'name' => '投诉',
                'describe' => '',
                'items' => array (
                    0=>array (
                        //'name' => '投诉/举报/反馈处理状态',
                        'name' => '投诉/意见反馈处理状态',
                        'describe' => '',
                        'default' => array (
                            'wms' => 3,
                            'mms' => 1,
                            'ems' => 1
                        )
                    )
                )
            ),

            3=>array (
                'name' => '公告',
                'describe' => '',
                'items' => array (
                    0=>array (
                        'name' => '平台活动提醒',
                        'describe' => '',
                        'default' => array (
                            'mms' => 1,
                            'ems' => 3
                        )
                    )
                )
            ),

            4=>array (
                'name' => '留言',
                'describe' => '',
                'items' => array (
                    0=>array (
                        'name' => '新留言提醒',
                        'describe' => '',
                        'default' => array (
                            'mms' => 0,
                            'ems' => 3
                        )
                    )
                )
            )
    			
        ),

        //用户中心 我的喜地 温馨提示信息

        'warm' => array(
            'morningu'=>array(
                '早睡早起身体好',
            ),
            'morning'=>array(
                //'享受早上照进窗户的每一丝阳光吧',
                '迎接一天最美好的时光吧',
            ),
            'noon'=>array(
                '人是铁饭是钢，准时吃饭哦'
            ),
            'afternoon'=>array(
                //'打起精神，继续工作！',
                //'做做头部运动，给大脑充充氧。',
                '来一杯下午茶小憩一下吧'
            ),
            'evening'=>array(
                //'喝杯热牛奶，好好休息下吧！',
                //'点灯夜读，也是一种享受哦。',
                '下班了好好放松放松吧'
            ),
            'night'=>array(
                '快去睡觉吧，熬夜小心黑眼圈哦'
            ),
        ),
        //用户中心 我的喜地  订单温馨提示信息

        'orderNotice' => array(
            '0' => '你的订单还没支付,快去支付吧.不然提交订单三小时后,系统会自动取消订单.',
            '1' => '买家已付款',
            '2' => '配货中',
            '3' => '已发货',
            '4' => '等待买家收货',
            '5' => '你已确认收货,去评价一下吧.',
            '6' => '申请退款/退货中',
            '10' => '交易完成',
            '11' => '交易关闭',
            '12' => '交易成功',
        )
    );

    //意见反馈
    private static $feedback = array(
        'feedType' => array(
            '1'=>'账号问题相关',
            '2'=>'购买操作问题相关',
            '3'=>'支付问题相关',
            '4'=>'物流售后问题相关',
            '5'=>'其它问题',
            '6'=>'推荐商品'
         ),
        'status'=>array(
            '1'=>'待处理',
            '2'=>'处理中',
            '3'=>'已完成'
        )
    );
    // 枚举值
    private static $enums = array(
        // 退款单
        'refund'=>array(
            'status'=>array(
                '0'=>'待处理',
                '1'=>'处理中',
                '2'=>'退款中',
                '3'=>'退货中',
                '4'=>'已拒绝',
                '5'=>'已退款',
                '10000'=>'已取消'
            ),
            'type'=>array(
                '0'=>'退款',
                '1'=>'退款并退货'
            ),
            'reason'=>array(
                '0'=>'其它',
                '1'=>'物流没送到',
                '2'=>'已拒收，包装破损',
                '3'=>'不上门配送',
                '4'=>'少发货',
                '5'=>'七天无理由退货',
                '6'=>'商品质量问题',
                '7'=>'收到商品破损',
                '8'=>'商品错发',
                '9'=>'发票问题',
                '10'=>'收到商品与描述不符',
                '11'=>'不想买了',
                '12'=>'重复购买/买错了',
                '13'=>'地址写错了'
            ),
            'threeMonths'=>array(
                '1'=>'三个月内申请的退款单',
                '2'=>'三个月前申请的退款单',
            ),
        ),
        // 投诉单
        'complaint'=>array(
            // 类型
            'type'=>array(
                '1'=>'产品相关',
                '2'=>'物流相关',
                '3'=>'退款退货相关',
                '4'=>'网站相关',
                '5'=>'服务相关',
                '6'=>'其它方面'
            ),
            // 状态
            'status'=>array(
                '1'=>'待处理',
                '2'=>'处理中',
                '3'=>'已完成'
            ),
            // 来源
            'source'=>array(
                '1'=>'Web投诉',
                '2'=>'电话投诉'
            )
        ),
        // 评价
        'comment' => [
            'state' => [
                '1' => '未审核',
                '2' => '未审核',
                '3' => '未通过',
                '4' => '审核通过',
                '5' => '无需审核',
            ],
        ],
    );

    //退货退款原因联动
    private static $refundReason = array(
        '0'=>array(
            'name'=>'其它',
            //self::$enums['reason'][key]
            'children'=>'0',
        ),
        '1'=>array(
          'name'=>'买家问题',
          'children'=>'11,12,13',
        ),
        '2'=>array(
            'name'=>'第三方物流问题',
            'children'=>'1,2,3',
        ),
        '3'=>array(
            'name'=>'平台问题',
            'children'=>'4,8',
        ),
        '4'=>array(
            'name'=>'商品质量问题',
            'children'=>'6,7',
        ),
        '5'=>array(
            'name'=>'非商品质量问题',
            'children'=>'5,10',
        )
    );



    


   

    // 订单状态对应的日志信息
    public static $orderLog = array(
        '0' => '订单提交成功，等待买家付款',
        '1' => '买家付款成功，等待配货',
        '2' => '配货中',
        '3' => '已发货',
        '4' => '等待买家收货',
        '5' => '已送达，买家确认收货',
        '6' => '申请退款中',
        '10' => '交易完成',
        '11' => '交易关闭',
        '12' => '交易成功',
    );

    // 退款单类型与退款理由的联动
    public static $refundTypeReasons = array(
        REFUNDTYPE_REFUND=>array(
            REFUNDREASON_REGRETED=>'不想买了',
            REFUNDREASON_WRONGCHOICE=>'重复购买/买错了',
            REFUNDREASON_WRONGADDRESS=>'地址写错了',
            REFUNDREASON_UNDELIVERED=>'物流未送到',
            REFUNDREASON_REJECTED=>'已拒收，包装破损',
            REFUNDREASON_UNACCEPTED=>'不上门配送',
            REFUNDREASON_MISSING=>'少发货',
            REFUNDREASON_OTHER=>'其它',
        ),
        REFUNDTYPE_RETURN=>array(
            REFUNDREASON_7DAYS=>'七天无理由退货',
            REFUNDREASON_WRONGGOODS=>'商品错发',
            REFUNDREASON_POORQUALITY=>'商品质量问题',
            REFUNDREASON_DAMAGED=>'收到商品破损',
            REFUNDREASON_UNMATCHAD=>'收到商品与描述不符',
            REFUNDREASON_OTHER=>'其它',
        )
    );

    /**
     * 根据订单状态取日志内容
     * @param int $status 订单状态
     * @return string 日志内容
     */
    public static function getOrderLog($status)
    {
        return isset(self::$orderLog[$status]) ? self::$orderLog[$status] : null;
    }

    /**
     * 根据退款单类型和状态取日志内容
     * @param int $type 退款单类型
     * @param int $status 退款单状态
     * @return string 日志内容
     */
    public static function getRefundLog($type, $status)
    {
        return isset(self::$refundLog[$type][$status]) ? self::$refundLog[$type][$status] : null;
    }

    /**
     * 退货退款原因 的第一级列表
     * @return array 键值对名称
     * @author subin
     */
    public static function getRefundReasonFirstList()
    {
        $result = array();
        if(!isset(self::$refundReason)){
            return $result;
        }
        foreach (self::$refundReason as $k =>$v){
            $result[$k] = $v['name'];
        }
        return $result;
    }

    /**
     * 退货退款原因 的第二级列表
     * @param int $key 第一级键值
     * @return array 键值对名称
     * @author subin
     */
    public static function getRefundReasonSecList($key)
    {
        $result = array();
        if(!isset(self::$refundReason[$key])){
            return $result;
        }
        $children = self::$refundReason[$key]['children'];
        $arr = explode(',', $children);
        foreach ($arr as $v){
            $result[$v] = self::getRefundReasonLabel($v);
        }
        return $result;
    }

    /**
     * 退货退款原因 的第二级字符串
     * @param int $key 第一级键值
     * @return string
     * @author subin
     */
    public static function getRefundReasonFirstChildren($key)
    {
        if(!isset(self::$refundReason[$key])){
            return;
        }
        return self::$refundReason[$key]['children'];

    }

    /**
     * 取枚举值
     * @param string $category 类别名称
     * @param string $key 枚举属性名称
     * @param string $value 枚举值
     * @return mixed
     * @author donieli
     */
    public static function getLabel($category, $key, $value)
    {
        return isset(self::$enums[$category][$key][$value]) ? self::$enums[$category][$key][$value] : null;
    }

    /**
     * 取退款单状态枚举值标签
     * @param string $status 退款单状态值
     * @return string
     * @author donieli
     */
    public static function getRefundStatusLabel($status)
    {
        $label = self::getLabel('refund', 'status', $status);
        return empty($label) ? '' : $label;
    }

    /**
     * 取退款单类型枚举值标签
     * @param string $type 退款单类型值
     * @return string
     * @author donieli
     */
    public static function getRefundTypeLabel($type)
    {
        $label = self::getLabel('refund', 'type', $type);
        return empty($label) ? '' : $label;
    }

    /**
     * 取退款原因枚举值标签
     * @param string $reason 退款原因值
     * @return string
     * @author donieli
     */
    public static function getRefundReasonLabel($reason)
    {
        $label = self::getLabel('refund', 'reason', $reason);
        return empty($label) ? '' : $label;
    }

    /**
     * 取投诉类型标签
     * @param int $type 投诉类型
     * @return string
     * @author donieli
     */
    public static function getComplaintTypeLabel($type)
    {
        $label = self::getLabel('complaint', 'type', $type);
        return empty($label) ? '' : $label;
    }

    /**
     * 取投诉状态标签
     * @param int $status 投诉状态
     * @return string
     * @author donieli
     */
    public static function getComplaintStatusLabel($status)
    {
        $label = self::getLabel('complaint', 'status', $status);
        return empty($label) ? '' : $label;
    }

    /**
     * 取投诉来源标签
     * @param int $source 投诉来源
     * @return string
     * @author donieli
     */
    public static function getComplaintSourceLabel($source)
    {
        $label = self::getLabel('complaint', 'source', $source);
        return empty($label) ? '' : $label;
    }

    /*
     * 订单相关的配置信息
     * @param int $id 需要查找订单模块的key值
     * @param string $incName 验证订单模块名称
     * return string;
     */
    public static function orderInc($id,$incName) {
       if (isset(self::$orderArr[$incName])) {
           if ($id!=''){
               if (isset(self::$orderArr[$incName][$id])) {
                   return self::$orderArr[$incName][$id];
               } else {
                   return false;
               }
               
           } else {
               return self::$orderArr[$incName];
           }
       } else {
           return false;
       }
    }

    /**
     * 取枚举值数组
     * @param string $category 类别名称
     * @param string $key 枚举属性名称
     * @return array 键值对数组
     * @author donieli
     */
    public static function getEnums($category, $key)
    {
        return isset(self::$enums[$category][$key]) ? self::$enums[$category][$key] : null;
    }

    /**
     * 取意见反馈的值
     * @param string $category
     * @param int $key
     * @return boolean
     */
    public static function getFeedNames($category, $key='')
    {
    	if (isset(self::$feedback[$category])) {
    		if ($key!=''){
    			return self::$feedback[$category][$key];
    		} else {
    			return self::$feedback[$category];
    		}
    	} else {
    		return false;
    	}
    }

    /**
     * 根据退款单类型取退款理由键值对数组
     * @param int $type 退款单类型
     * @return array 退款理由键值对数组
     * @author donieli
     */
    public static function getRefundReasonsByType($type)
    {
        return isset(self::$refundTypeReasons[$type]) ? self::$refundTypeReasons[$type] : null;
    }
    
    /**
     * 根据退款单类型和订单状态取退款理由键值对数组
     * @param int $type 退款单类型
     * @param int $status 订单状态
     * @param int $orderType 订单类型
     * @return array 退款理由键值对数组
     * @author donieli
     */
    public static function getRefundReasonsByTypeStatus($type, $status, $orderType=ORDERTYPE_IMPORT)
    {
        // 自贸订单，已收货之后，由客访中创建退单，使用以下两个理由
        if ($orderType == ORDERTYPE_CROSS && $status > ORDERSTATUS_SHIPPED) {
            return [
                REFUNDREASON_POORQUALITY=>'商品质量问题',
                REFUNDREASON_DAMAGED=>'收到商品破损',
            ];
        }
        return isset(self::$refundReasonsByTypeStatus[$type][$status]) ? 
            self::$refundReasonsByTypeStatus[$type][$status] : null;
    }
    
    /**
     * 根据退单类型、退单状态、退单是否已取消取状态描述信息
     * @param int $type            退单类型
     * @param int $status          退单状态
     * @param string $isCanceled   是否已取消，已取消为1，未取消为0
     * @return string
     * @author donieli
     */
    public static function getRefundStateDesc($type, $status, $isCanceled='0')
    {
        if ($isCanceled) return self::$refundStateDesc[$type]['1'];
        return isset(self::$refundStateDesc[$type]['0'][$status]) ? self::$refundStateDesc[$type]['0'][$status] : '';
    }
    
    /**
     * 运费模板
     * @author	ivanhu
     */
    public static $faresTemplate = array(
    	'250000'	=> array(	//江苏
    		'default'	=> 5,
    		'ext'		=> 1		
    	),
    	'400000'	=> array(	//浙江
    		'default'	=> 5,
    		'ext'		=> 1		
    	),
    	'340000'	=> array(	//上海
    		'default'	=> 5,
    		'ext'		=> 1		
    	),
    	'120000'	=> array(	//安徽
    		'default'	=> 5,
    		'ext'		=> 1		
    	),
    	'110000'	=> array(	//北京
    		'default'	=> 8,
    		'ext'		=> 6		
    	),
    	'360000'	=> array(	//天津
    		'default'	=> 8,
    		'ext'		=> 6		
    	),
    	'310000'	=> array(	//山东
    		'default'	=> 8,
    		'ext'		=> 6		
    	),
    	'150000'	=> array(	//广东
    		'default'	=> 8,
    		'ext'		=> 6		
    	),
    	'130000'	=> array(	//福建
    		'default'	=> 8,
    		'ext'		=> 6		
    	),
    	'260000'	=> array(	//江西
    		'default'	=> 8,
    		'ext'		=> 6		
    	),
    	'230000'	=> array(	//湖南
    		'default'	=> 8,
    		'ext'		=> 8		
    	),
    	'220000'	=> array(	//湖北
    		'default'	=> 8,
    		'ext'		=> 6		
    	),
    	'200000'	=> array(	//河南
    		'default'	=> 8,
    		'ext'		=> 8		
    	),
    	'190000'	=> array(	//河北
    		'default'	=> 8,
    		'ext'		=> 8		
    	),
    	'410000'	=> array(	//重庆
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'350000'	=> array(	//四川
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'320000'	=> array(	//山西
    		'default'	=> 8,
    		'ext'		=> 8		
    	),
    	'330000'	=> array(	//陕西
    		'default'	=> 8,
    		'ext'		=> 8		
    	),
    	'210000'	=> array(	//黑龙江
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'240000'	=> array(	//吉林
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'270000'	=> array(	//辽宁
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'280000'	=> array(	//内蒙
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'290000'	=> array(	//宁夏
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'140000'	=> array(	//甘肃
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'300000'	=> array(	//青海
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'390000'	=> array(	//云南
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'160000'	=> array(	//广西
    		'default'	=> 8,
    		'ext'		=> 8		
    	),
    	'170000'	=> array(	//贵州
    		'default'	=> 10,
    		'ext'		=> 10		
    	),
    	'180000'	=> array(	//海南
    		'default'	=> 8,
    		'ext'		=> 8		
    	),
    	'380000'	=> array(	//新疆
    		'default'	=> 15,
    		'ext'		=> 15		
    	),
    	'370000'	=> array(	//西藏
    		'default'	=> 15,
    		'ext'		=> 15		
    	),
    );
    
    /**
     * 物流单号查询(该配置需跟simonsun那边同步)
     * @author	ivanhu
     */
    public static $express = array(
    		'YTO'	=> array(
    				'name'	=> '圆通快递',
    				'query'	=> 'http://www.yto.net.cn/cn/service/Shipmenttracking.html'
    		),
    		'ZTO'	=> array(
    				'name'	=> '中通快递',
    				'query'	=> 'http://query.zto.cn/bill.aspx'
    		),
    		'STO'	=> array(
    				'name'	=> '申通快递',
    				'query'	=> 'http://www.sto.cn'
    		),
    );
    
    //自提点
    public static $bySelfAddress = array(
    		'1'	=> array(
    				'prov'		=> 340000,
    				'city'		=> 340100,
    		        'district'	=> 340105,
    				'address'	=> '上海市浦东新区金桥区建业路416号 自提服务站, 电话13681853275',
    				'pname'		=> '上海',
    				'cname'		=> '上海市',
    				'dname'		=> '浦东新区'
    		)
    );
    
    //手机接口数据类型
    public static $mobileDataType = array('xml', 'jsonp', 'json');
    
    

    //跨境通税率
    public static $taxRate = array(
    		"10000"=>array("E.000.000","E","000","000","个人护理","","",""),
			"10001"=>array("E.001.000","E","001","000","面部护理","","",""),
			"10002"=>array("E.001.001","E","001","001","洁面","09020100","支、瓶","50"),
			"10003"=>array("E.001.002","E","001","002","化妆水","09039900","件","50"),
			"10004"=>array("E.001.003","E","001","003","精华露","09020400","支、瓶","50"),
			"10005"=>array("E.001.004","E","001","004","乳液面霜","09020300","支、瓶","50"),
			"10006"=>array("E.001.005","E","001","005","磨砂/精油","09029900","支","50"),
			"10007"=>array("E.001.006","E","001","006","面膜面贴","09020600","张、瓶","50"),
			"10008"=>array("E.001.007","E","001","007","防晒","09020900","支","50"),
			"10009"=>array("E.001.008","E","001","008","眼部护理","09020200","支、瓶","50"),
			"10010"=>array("E.001.009","E","001","009","护肤套装","09029900","支","50"),
			"10011"=>array("E.001.010","E","001","010","卸妆","09029900","支","50"),
			"10012"=>array("E.001.011","E","001","011","男士剃须","09029900","支","50"),
			"10013"=>array("E.002.000","E","002","000","美发护发","","",""),
			"10014"=>array("E.002.001","E","002","001","洗发","09029900","支","50"),
			"10015"=>array("E.002.002","E","002","002","护发/造型","09039900","件","50"),
			"10016"=>array("E.002.003","E","002","003","洗护套装","09029900","支","50"),
			"10017"=>array("E.002.004","E","002","004","染发用品","09039900","件","50"),
			"10018"=>array("E.002.005","E","002","005","假发","27000000","件","10"),
			"10019"=>array("E.003.000","E","003","000","身体护理","","",""),
			"10020"=>array("E.003.001","E","003","001","沐浴","09029900","支","50"),
			"10021"=>array("E.003.002","E","003","002","身体乳","09029900","支","50"),
			"10022"=>array("E.003.003","E","003","003","脱毛膏","09029900","支","50"),
			"10023"=>array("E.003.004","E","003","004","磨砂/浴盐","09029900","支","50"),
			"10024"=>array("E.003.005","E","003","005","手工\\香皂","27000000","件","10"),
			"10025"=>array("E.003.006","E","003","006","纤体瘦身","09040000","件","50"),
			"10026"=>array("E.003.007","E","003","007","手足护理","09029900","支","50"),
			"10027"=>array("E.003.008","E","003","008","颈部护理","09029900","支","50"),
			"10028"=>array("E.004.000","E","004","000","口腔护理","","",""),
			"10029"=>array("E.004.001","E","004","001","牙膏\\牙粉","09029900","支","50"),
			"10030"=>array("E.004.002","E","004","002","牙刷\\牙线","27000000","件","10"),
			"10031"=>array("E.004.003","E","004","003","漱口水","09029900","支","50"),
			"10032"=>array("E.004.004","E","004","004","护理工具","27000000","件","10"),
			"10033"=>array("E.005.000","E","005","000","香水","","",""),
			"10034"=>array("E.005.001","E","005","001","女士香水","09010100","瓶","50"),
			"10035"=>array("E.005.002","E","005","002","男士香水","09010100","瓶","50"),
			"10036"=>array("E.005.003","E","005","003","礼盒套装","09010100","瓶","50"),
			"10037"=>array("E.005.004","E","005","004","香体走珠","09019900","件","50"),
			"10038"=>array("E.006.000","E","006","000","彩妆用品","","",""),
			"10039"=>array("E.006.001","E","006","001","BB/CC霜","09039900","件","50"),
			"10040"=>array("E.006.002","E","006","002","底妆","09030100","盒、支","50"),
			"10041"=>array("E.006.003","E","006","003","腮红","09039900","件","50"),
			"10042"=>array("E.006.004","E","006","004","眼影/眼线","09039900","件","50"),
			"10043"=>array("E.006.005","E","006","005","眉笔","09039900","件","50"),
			"10044"=>array("E.006.006","E","006","006","睫毛膏","09030200","支、瓶","50"),
			"10045"=>array("E.006.007","E","006","007","唇膏唇彩","09030400","支","50"),
			"10046"=>array("E.006.008","E","006","008","指甲油/工具","09030300","瓶","50"),
			"10047"=>array("E.006.009","E","006","009","彩妆套装","09039900","件","50"),
			"10048"=>array("E.007.000","E","007","000","美妆工具","","",""),
			"10049"=>array("E.007.001","E","007","001","美容工具","27000000","件","10"),
			"10050"=>array("E.007.002","E","007","002","化妆刷","27000000","件","10"),
			"10051"=>array("E.007.003","E","007","003","假睫毛","27000000","件","10"),
			"10052"=>array("E.007.004","E","007","004","美发工具","11021190","个、台","20"),
			"10053"=>array("E.007.005","E","007","005","按摩器","10029900","件","10"),
			"10054"=>array("E.008.000","E","008","000","卫生护理","","",""),
			"10055"=>array("E.008.001","E","008","001","卫生棉条","27000000","件","10"),
			"10056"=>array("E.008.002","E","008","002","卫生巾","27000000","件","10"),
			"10057"=>array("E.008.003","E","008","003","卫生护垫","27000000","件","10"),
			"10058"=>array("E.008.004","E","008","004","湿巾","27000000","件","10"),
			"10059"=>array("E.008.005","E","008","005","女性洗液","09029900","支","50"),
			"10121"=>array("D.000.000","D","000","000","母婴用品","","",""),
			"10122"=>array("D.001.000","D","001","000","婴幼用品","","",""),
			"10123"=>array("D.001.001","D","001","001","奶瓶奶嘴","11019910"," 件、个","10"),
			"10124"=>array("D.001.002","D","001","002","吸奶器","27000000","件","10"),
			"10125"=>array("D.001.003","D","001","003","暖奶消毒","11019990","台","20"),
			"10126"=>array("D.001.004","D","001","004","餐具","11010100","个、把","10"),
			"10127"=>array("D.001.005","D","001","005","磨牙棒","01019900","千克","10"),
			"10128"=>array("D.001.006","D","001","006","水壶水杯","01019900","千克","10"),
			"10129"=>array("D.001.007","D","001","007","隔尿垫","27000000","件","10"),
			"10130"=>array("D.001.008","D","001","008","洗护用品","","",""),
			"10131"=>array("D.001.009","D","001","009","洗衣液/皂","27000000","件","10"),
			"10132"=>array("D.001.010","D","001","010","奶瓶清洗","27000000","件","10"),
			"10133"=>array("D.001.011","D","001","011","尿裤/湿巾","27000000","件","10"),
			"10134"=>array("D.001.012","D","001","012","驱蚊防虫","27000000","件","10"),
			"10135"=>array("D.002.000","D","002","000","婴幼食品","","",""),
			"10136"=>array("D.002.001","D","002","001","奶粉","01010700","千克","10"),
			"10137"=>array("D.002.002","D","002","002","益生菌","01019900","千克","10"),
			"10138"=>array("D.002.003","D","002","003","钙铁锌/维生素","01019900","千克","10"),
			"10139"=>array("D.002.004","D","002","004","米粉/粥","01019900","千克","10"),
			"10140"=>array("D.002.005","D","002","005","DHA","","",""),
			"10141"=>array("D.002.006","D","002","006","零食","01019900","千克","10"),
			"10142"=>array("D.002.007","D","002","007","面条","01019900","千克","10"),
			"10143"=>array("D.002.008","D","002","008","果泥/果汁","01019900","千克","10"),
			"10144"=>array("D.003.000","D","003","000","童车童床","","",""),
			"10145"=>array("D.003.001","D","003","001","婴童床","12990000","件","10"),
			"10146"=>array("D.003.002","D","003","002","婴儿推车","26030000","辆","20"),
			"10147"=>array("D.003.003","D","003","003","餐椅摇椅","12990000","件","10"),
			"10148"=>array("D.003.004","D","003","004","学步车","26030000","辆","20"),
			"10149"=>array("D.003.005","D","003","005","安全座椅","27000000","件","10"),
			"10150"=>array("D.003.006","D","003","006","三轮车","26020000","辆","20"),
			"10151"=>array("D.003.007","D","003","007","自行车","26010000","辆","20"),
			"10152"=>array("D.003.008","D","003","008","滑板车","26030000","辆","20"),
			"10153"=>array("D.003.009","D","003","009","电动车","26030000","辆","20"),
			"10177"=>array("D.006.000","D","006","000","婴幼玩具","","",""),
			"10178"=>array("D.006.001","D","006","001","乐器","24990000","件","10"),
			"10179"=>array("D.006.002","D","006","002","动漫玩具","22020000","件","10"),
			"10180"=>array("D.006.003","D","006","003","遥控/电动玩具","22020000","件","10"),
			"10181"=>array("D.006.004","D","006","004","模型玩具","22020000","件","10"),
			"10182"=>array("D.006.005","D","006","005","积木拼插","22020000","件","10"),
			"10183"=>array("D.006.006","D","006","006","娃娃玩具","22020000","件","10"),
			"10184"=>array("D.006.007","D","006","007","益智玩具","22020000","件","10"),
			"10185"=>array("D.006.008","D","006","008","毛绒玩具","22020000","件","10"),
			"10195"=>array("D.007.009","D","007","009","孕期营养","01019900","千克","10"),
			"10235"=>array("A.004.000","A","004","000","清洁用品","","",""),
			"10236"=>array("A.004.001","A","004","001","纸品湿巾","27000000","件","10"),
			"10237"=>array("A.004.002","A","004","002","衣物清洁","27000000","件","10"),
			"10238"=>array("A.004.003","A","004","003","清洁工具","27000000","件","10"),
			"10239"=>array("A.004.004","A","004","004","家居清洁","27000000","件","10"),
			"10240"=>array("A.004.005","A","004","005","一次性用品","27000000","件","10"),
			"10241"=>array("A.004.006","A","004","006","皮具护理","27000000","件","10"),
			"10242"=>array("A.005.000","A","005","000","宠物生活","","",""),
			"10243"=>array("A.005.001","A","005","001","宠物主粮","27000000","件","10"),
			"10244"=>array("A.005.002","A","005","002","宠物零食","27000000","件","10"),
			"10245"=>array("A.005.003","A","005","003","洗护美容","27000000","件","10"),
			"10246"=>array("A.005.004","A","005","004","日用品/装备","27000000","件","10"),
			"10247"=>array("A.005.005","A","005","005","医疗保健","27000000","件","10"),
			"10248"=>array("A.005.006","A","005","006","宠物玩具","27000000","件","10"),
			"10249"=>array("A.005.007","A","005","007","水族用品","27000000","件","10"),
			"10250"=>array("A.005.008","A","005","008","猫砂","27000000","件","10"),
			"10251"=>array("A.005.009","A","005","009","尿布","27000000","件","10"),
			"10252"=>array("A.005.010","A","005","010","驱虫用品","27000000","件","10"),
			"10253"=>array("A.005.011","A","005","011","牵引工具","27000000","件","10"),
			"10305"=>array("B.006.001","B","006","001","浴霸/排气扇","11039990","台","20"),
			"10306"=>array("B.006.002","B","006","002","智能洁身器（卫洗丽）","11021190","台","20"),
			"10316"=>array("F.000.000","F","000","000","食品","","",""),
			"10317"=>array("F.001.000","F","001","000","休闲食品","01019900","千克","10"),
			"10318"=>array("F.001.001","F","001","001","休闲零食","01019900","千克","10"),
			"10319"=>array("F.001.002","F","001","002","饼干/蛋糕","01019900","千克","10"),
			"10320"=>array("F.001.003","F","001","003","糖果","01019900","千克","10"),
			"10321"=>array("F.001.004","F","001","004","巧克力","01019900","千克","10"),
			"10322"=>array("F.001.005","F","001","005","坚果炒货","01019900","千克","10"),
			"10323"=>array("F.001.006","F","001","006","蜜饯果干","01019900","千克","10"),
			"10324"=>array("F.001.007","F","001","007","肉干肉脯","01019900","千克","10"),
			"10325"=>array("F.001.008","F","001","008","无糖食品","01019900","千克","10"),
			"10326"=>array("F.002.000","F","002","000","饮料冲调","","",""),
			"10327"=>array("F.002.001","F","002","001","牛奶乳品","01019900","千克","10"),
			"10328"=>array("F.002.002","F","002","002","饮料","01029900","千克","10"),
			"10329"=>array("F.002.003","F","002","003","饮用水","01029900","千克","10"),
			"10330"=>array("F.002.004","F","002","004","咖啡","01020200","千克","10"),
			"10331"=>array("F.002.005","F","002","005","奶茶","01029900","千克","10"),
			"10332"=>array("F.002.006","F","002","006","冲饮/谷物","01019900","千克","10"),
			"10333"=>array("F.003.000","F","003","000","酒类","","",""),
			"10334"=>array("F.003.001","F","003","001","白酒","02070000","瓶（不超过750毫升）","50"),
			"10335"=>array("F.003.002","F","003","002","葡萄酒","02020100/02020200","瓶（不超过750毫升）","50"),
			"10336"=>array("F.003.003","F","003","003","洋酒","0204/5/6","瓶（不超过750毫升）","50"),
			"10337"=>array("F.003.004","F","003","004","啤酒","02010100/02010200","瓶（不超过750毫升）","50"),
			"10338"=>array("F.003.005","F","003","005","养生酒","02080000","瓶（不超过750毫升）","50"),
			"10339"=>array("F.003.006","F","003","006","收藏酒","02990000","瓶（不超过750毫升）","50"),
			"10340"=>array("F.004.000","F","004","000","粮油米面","","",""),
			"10341"=>array("F.004.001","F","004","001","大米","01019900","千克","10"),
			"10342"=>array("F.004.002","F","004","002","面食","01019900","千克","10"),
			"10343"=>array("F.004.003","F","004","003","食用油","01019900","千克","10"),
			"10344"=>array("F.004.004","F","004","004","调味品","01010800","千克","10"),
			"10345"=>array("F.004.005","F","004","005","方便食品","01019900","千克","10"),
			"10346"=>array("F.005.000","F","005","000","营养保健","","",""),
			"10347"=>array("F.005.001","F","005","001","胶原蛋白","01019900","千克","10"),
			"10348"=>array("F.005.002","F","005","002","膳食纤维","01019900","千克","10"),
			"10349"=>array("F.005.003","F","005","003","维生素/矿物质","01019900","千克","10"),
			"10350"=>array("F.005.004","F","005","004","蛋白质粉","01019900","千克","10"),
			"10351"=>array("F.005.005","F","005","005","鱼肝油","01019900","千克","10"),
			"10352"=>array("F.005.006","F","005","006","葡萄籽","01019900","千克","10"),
			"10353"=>array("F.005.007","F","005","007","虾青素","01019900","千克","10"),
			"10354"=>array("F.005.008","F","005","008","其他保健品","01019900","千克","10"),
			"10355"=>array("E.008.006","E","008","006","计生用品","27000000","件","10"),
    	);
    //'发货人所在国（关）', 接口提供原产国，按品牌的原产国检索代码 
    public static $customSn = array( 
			'阿富汗'=>101,
			'巴林'=>102,
			'孟加拉国'=>103,
			'不丹'=>104,
			'文莱'=>105,
			'缅甸'=>106,
			'柬埔寨'=>107,
			'塞浦路斯'=>108,
			'朝鲜'=>109,
			'中国香港'=>110,
			'印度'=>111,
			'印度尼西亚'=>112,
			'伊朗'=>113,
			'伊拉克'=>114,
			'以色列'=>115,
			'日本'=>116,
			'约旦'=>117,
			'科威特'=>118,
			'老挝'=>119,
			'黎巴嫩'=>120,
			'中国澳门'=>121,
			'马来西亚'=>122,
			'马尔代夫'=>123,
			'蒙古'=>124,
			'尼泊尔'=>125,
			'阿曼'=>126,
			'巴基斯坦'=>127,
			'巴勒斯坦'=>128,
			'菲律宾'=>129,
			'卡塔尔'=>130,
			'沙特阿拉伯'=>131,
			'新加坡'=>132,
			'韩国'=>133,
			'斯里兰卡'=>134,
			'叙利亚'=>135,
			'泰国'=>136,
			'土耳其'=>137,
			'阿联酋'=>138,
			'也门共和国'=>139,
			'越南'=>141,
			'中国'=>142,
			'台澎金马关税区'=>143,
			'东帝汶'=>144,
			'哈萨克斯坦'=>145,
			'吉尔吉斯斯坦'=>146,
			'塔吉克斯坦'=>147,
			'土库曼斯坦'=>148,
			'乌兹别克斯坦'=>149,
			'亚洲其他国家(地区)'=>199,
			'阿尔及利亚'=>201,
			'安哥拉'=>202,
			'贝宁'=>203,
			'博茨瓦那'=>204,
			'布隆迪'=>205,
			'喀麦隆'=>206,
			'加那利群岛'=>207,
			'佛得角'=>208,
			'中非共和国'=>209,
			'塞卜泰'=>210,
			'乍得'=>211,
			'科摩罗'=>212,
			'刚果'=>213,
			'吉布提'=>214,
			'埃及'=>215,
			'赤道几内亚'=>216,
			'埃塞俄比亚'=>217,
			'加蓬'=>218,
			'冈比亚'=>219,
			'加纳'=>220,
			'几内亚'=>221,
			'几内亚(比绍)'=>222,
			'科特迪瓦'=>223,
			'肯尼亚'=>224,
			'利比里亚'=>225,
			'利比亚'=>226,
			'马达加斯加'=>227,
			'马拉维'=>228,
			'马里'=>229,
			'毛里塔尼亚'=>230,
			'毛里求斯'=>231,
			'摩洛哥'=>232,
			'莫桑比克'=>233,
			'纳米比亚'=>234,
			'尼日尔'=>235,
			'尼日利亚'=>236,
			'留尼汪'=>237,
			'卢旺达'=>238,
			'圣多美和普林西比'=>239,
			'塞内加尔'=>240,
			'塞舌尔'=>241,
			'塞拉利昂'=>242,
			'索马里'=>243,
			'南非'=>244,
			'西撒哈拉'=>245,
			'苏丹'=>246,
			'坦桑尼亚'=>247,
			'多哥'=>248,
			'突尼斯'=>249,
			'乌干达'=>250,
			'布基纳法索'=>251,
			'民主刚果'=>252,
			'赞比亚'=>253,
			'津巴布韦'=>254,
			'莱索托'=>255,
			'梅利利亚'=>256,
			'斯威士兰'=>257,
			'厄立特里亚'=>258,
			'马约特岛'=>259,
			'非洲其他国家(地区)'=>299,
			'比利时'=>301,
			'丹麦'=>302,
			'英国'=>303,
			'德国'=>304,
			'法国'=>305,
			'爱尔兰'=>306,
			'意大利'=>307,
			'卢森堡'=>308,
			'荷兰'=>309,
			'希腊'=>310,
			'葡萄牙'=>311,
			'西班牙'=>312,
			'阿尔巴尼亚'=>313,
			'安道尔'=>314,
			'奥地利'=>315,
			'保加利亚'=>316,
			'芬兰'=>318,
			'直布罗陀'=>320,
			'匈牙利'=>321,
			'冰岛'=>322,
			'列支敦士登'=>323,
			'马耳他'=>324,
			'摩纳哥'=>325,
			'挪威'=>326,
			'波兰'=>327,
			'罗马尼亚'=>328,
			'圣马力诺'=>329,
			'瑞典'=>330,
			'瑞士'=>331,
			'爱沙尼亚'=>334,
			'拉脱维亚'=>335,
			'立陶宛'=>336,
			'格鲁吉亚'=>337,
			'亚美尼亚'=>338,
			'阿塞拜疆'=>339,
			'白俄罗斯'=>340,
			'摩尔多瓦'=>343,
			'俄罗斯联邦'=>344,
			'乌克兰'=>347,
			'塞尔维亚和黑山'=>349,
			'斯洛文尼亚'=>350,
			'克罗地亚'=>351,
			'捷克共和国'=>352,
			'斯洛伐克'=>353,
			'马其顿'=>354,
			'波斯尼亚-黑塞哥维那共和'=>355,
			'梵蒂冈城国'=>356,
			'法罗群岛'=>357,
			'欧洲其他国家(地区)'=>399,
			'安提瓜和巴布达'=>401,
			'阿根廷'=>402,
			'阿鲁巴岛'=>403,
			'巴哈马'=>404,
			'巴巴多斯'=>405,
			'伯利兹'=>406,
			'玻利维亚'=>408,
			'博内尔'=>409,
			'巴西'=>410,
			'开曼群岛'=>411,
			'智利'=>412,
			'哥伦比亚'=>413,
			'多米尼亚共和国'=>414,
			'哥斯达黎加'=>415,
			'古巴'=>416,
			'库腊索岛'=>417,
			'多米尼加共和国'=>418,
			'厄瓜多尔'=>419,
			'法属圭亚那'=>420,
			'格林纳达'=>421,
			'瓜德罗普'=>422,
			'危地马拉'=>423,
			'圭亚那'=>424,
			'海地'=>425,
			'洪都拉斯'=>426,
			'牙买加'=>427,
			'马提尼克'=>428,
			'墨西哥'=>429,
			'蒙特塞拉特'=>430,
			'尼加拉瓜'=>431,
			'巴拿马'=>432,
			'巴拉圭'=>433,
			'秘鲁'=>434,
			'波多黎各'=>435,
			'萨巴'=>436,
			'圣卢西亚'=>437,
			'圣马丁岛'=>438,
			'圣文森特和格林纳丁斯'=>439,
			'萨尔瓦多'=>440,
			'苏里南'=>441,
			'特立尼达和多巴哥'=>442,
			'特克斯和凯科斯群岛'=>443,
			'乌拉圭'=>444,
			'委内瑞拉'=>445,
			'英属维尔京群岛'=>446,
			'圣其茨-尼维斯'=>447,
			'圣皮埃尔和密克隆'=>448,
			'荷属安地列斯群岛'=>449,
			'拉丁美洲其他国家(地区)'=>499,
			'加拿大'=>501,
			'美国'=>502,
			'格陵兰'=>503,
			'百慕大'=>504,
			'北美洲其他国家(地区)'=>599,
			'澳大利亚'=>601,
			'库克群岛'=>602,
			'斐济'=>603,
			'盖比群岛'=>604,
			'马克萨斯群岛'=>605,
			'瑙鲁'=>606,
			'新喀里多尼亚'=>607,
			'瓦努阿图'=>608,
			'新西兰'=>609,
			'诺福克岛'=>610,
			'巴布亚新几内亚'=>611,
			'社会群岛'=>612,
			'所罗门群岛'=>613,
			'汤加'=>614,
			'土阿莫土群岛'=>615,
			'土布艾群岛'=>616,
			'萨摩亚'=>617,
			'基里巴斯'=>618,
			'图瓦卢'=>619,
			'密克罗尼西亚联邦'=>620,
			'马绍尔群岛'=>621,
			'帕劳共和国'=>622,
			'法属波利尼西亚'=>623,
			'瓦利斯和浮图纳'=>625,
			'大洋洲其他国家(地区)'=>699,
			'国(地)别不详的'=>701,
			'联合国及机构和国际组织'=>702,
			'中性包装原产国别'=>999
    	);
   	
}
